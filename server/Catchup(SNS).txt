<<<<<<<<<<<<<<<<<<<<<<Catch up>>>>>>>>>>>>>>>>>>>>>>>>

[Client]

1) Login.js  
This page is for logging in, where users can either navigate to the sign-up screen or log in.

2) Join.js  
This is the sign-up page where users can check for duplicate IDs and input basic information to register.

3) Main.js  
This is the main screen that shows the most recently registered feeds by default. On the left tab, a Sidebar is implemented with links to Home, Profile, Logout, and Feed Registration. Feeds are displayed with the user's nickname, and any images the user attached can be viewed by dragging the mouse using Swiper. The feed's content and registration date are shown, and a like button with a like count is displayed. Users can also leave comments.

4) CommentPopup.js  
When clicking the comment view on a feed, a popup appears displaying the feed and its comments. Users can delete their own comments and the feed they posted. Clicking on the nickname of the person who left a comment redirects to the user's profile page.

5) Profile.js  
This is the profile page showing the user's followers, following, and the number of feeds. The user's registered feeds are listed, and on the profile page, only the representative image of the feed is displayed. Clicking on the image opens a popup page where the detailed feed content can be viewed.

6) FeedInsert.js  
This page allows users to register a feed, where the basic content and images of the feed can be attached. Multiple images can be added using multer.

7) App.js  
This file imports each component and specifies the routing paths.

8) login.css, join.css, style.css, popup.css, profile.css, add.css  
These are the CSS files for each component.

[Server]

1) feedRoute.js  
This router handles queries related to feeds, such as viewing and deleting feeds, viewing and posting comments, adding and removing likes, and registering feeds. It handles parameters sent by the client in the request and response.

2) profileRoute.js  
This router handles queries related to profiles, such as viewing a user's profile, checking and managing follows, and retrieving feed images. It processes parameters sent by the client in the request and response.

3) userRoute.js  
This router handles queries related to users, such as checking for duplicate IDs, sign-ups, and logins. It processes parameters sent by the client in the request and response.

4) db.js  
This file contains the settings for database connection.

5) server1.js  
This file handles routing and matching the clientâ€™s requested URLs to the appropriate routers.
